

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>chaneesong's blog</title>
  <subtitle></subtitle>
  <updated>2023-02-14T23:51:45+09:00</updated>
  <author>
    <name>chaneesong</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 chaneesong </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>vscode에서 typescript 디버깅</title>
    <link href="http://localhost:4000/posts/typescript-debugging-in-vscode/" rel="alternate" type="text/html" title="vscode에서 typescript 디버깅" />
    <published>2023-02-14T00:00:00+09:00</published>
  
    <updated>2023-02-14T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/typescript-debugging-in-vscode/</id>
    <content src="http://localhost:4000/posts/typescript-debugging-in-vscode/" />
    <author>
      <name>chaneesong</name>
    </author>

  
    
    <category term="typescript" />
    
  

  
    <summary>
      





      INTRO

vscode에서 타입스크립트를 디버깅하는 방법은 인터넷에도 많이 나와있고, vscode 공식문서에도 나와있다.
그래서 생략하고, 나머지 내가 난관에 봉착했던 것들을 기록하려한다.

vscode 공식문서

문제 상황

알고리즘 문제를 풀던 도중 긴가민가하는 문제가 생겨서 디버깅을 해야하는 상황이 생겼다.
그래서 위의 문서에 나와있는대로 디버깅을 하려하니 빌드는 되는데 실행이 잘 안된다.
검색을 해보니 task파일을 만들어야 한다더라… 어케 찾은건지;;
참고 블로그

그러고 나서 실행해보니 잘 되긴 되는데, 한 가지 문제가 생겼다.
나는 따로 푼 문제들을 언어별로 관리를 하는데, typescript에서는 최초로 테스트코드를 도입해보려는 시도를 했다.
그래서 아무 생각없이 루트 디렉토리에 tsc...
    </summary>
  

  </entry>

  
  <entry>
    <title>Group Anagrams</title>
    <link href="http://localhost:4000/posts/group-anagrams/" rel="alternate" type="text/html" title="Group Anagrams" />
    <published>2023-02-14T00:00:00+09:00</published>
  
    <updated>2023-02-14T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/group-anagrams/</id>
    <content src="http://localhost:4000/posts/group-anagrams/" />
    <author>
      <name>chaneesong</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  
    <summary>
      





      49. Group Anagrams

문제 설명

문자열로 이루어진 배열이 주어질 때, 애너그램 단위로 그룹화 묶어라.
정달을 반환할 때에는 정렬은 고려하지 않아도 된다.

애너그램은 일반적으로 모든 오리지널 문자를 한 번씩만 사용하여 다른 단어나 구를 재배치하여 형성된 단어나 구이다.

예를 들면, eat과 tea는 같은 애너그램 그룹이다.

해결 방법


  애너그램을 그룹화 하기 위해 현재 단어를 오름차순으로 정렬한 단어를 key 값으로 사용한다.
    
      example: eat =&amp;gt; aet
    
  
  각 애너그램 key의 value는 배열로 세팅한다.
  각 단어들을 key값에 따라 value에 넣는다.
  object 자료구조에서 value를 추출해 리턴한다.


풀이 코...
    </summary>
  

  </entry>

  
  <entry>
    <title>Most Common Word</title>
    <link href="http://localhost:4000/posts/most-common-word/" rel="alternate" type="text/html" title="Most Common Word" />
    <published>2023-02-13T00:00:00+09:00</published>
  
    <updated>2023-02-13T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/most-common-word/</id>
    <content src="http://localhost:4000/posts/most-common-word/" />
    <author>
      <name>chaneesong</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  
    <summary>
      





      819. Most Common Word

문제 설명

문자열로 된 문장과 금지어 목록이 배열로 주어질 때, 금지어가 아니면서 가장 많이 등장하는 단어를 리턴하라.
적어도 한 단어는 금지어로 지정되어 있지 않고, 정답은 하나 뿐이다.

문장의 단어들은 대소문자가 구분되어 있지 않고, 정답은 소문자로 반환되어야 한다.

해결 방법


  주어진 문장을 배열로 파싱한다.
    
      주어진 문장을 소문자로 바꾼다.
      알파벳이 아닌 문자를 공백으로 변환한다.
      공백을 기준으로 문장을 분리한다.
    
  
  단어의 숫자를 카운트 하기 위해 배열을 순회하며 object 자료형에 [word: count]형태로 저장한다.
    
      저장할 때 금지어는 생략한다.
    
  
...
    </summary>
  

  </entry>

  
  <entry>
    <title>Reorder Data in Log Files</title>
    <link href="http://localhost:4000/posts/reorder-data-in-log-files/" rel="alternate" type="text/html" title="Reorder Data in Log Files" />
    <published>2023-02-12T00:00:00+09:00</published>
  
    <updated>2023-02-12T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/reorder-data-in-log-files/</id>
    <content src="http://localhost:4000/posts/reorder-data-in-log-files/" />
    <author>
      <name>chaneesong</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  
    <summary>
      





      937. Reorder Data in Log Files

문제 설명

log 배열이 주어진다. 각각의 로그는 공백으로 구분되어있고, 첫 번째 단어는 식별자다.
로그에는 두 가지 타입이 있다.


  Letter-logs: 모든 단어(식별자 제외)는 소문자로 구성되어 있다.
  Digit-logs: 모든 단어(식별자 제외)는 숫자로 구성되어 있다.


로그를 재정렬 하는 방법


  문자 로그는 숫자 로그보다 앞에 온다.
  문자 로그는 사전 순으로 정렬되어 있다. 내용이 같다면, 식별자 기준으로 정렬한다.
  숫자 로그는 입력 순으로 정렬한다.


위 방법으로 재정렬 된 로그 배열을 리턴하라.

해결 방법


  입력 받은 로그 배열을 문자와 숫자 로그로 분리한다.
  문자 로그는 사전 순으로 재 정렬...
    </summary>
  

  </entry>

  
  <entry>
    <title>Reverse String</title>
    <link href="http://localhost:4000/posts/reverse-string/" rel="alternate" type="text/html" title="Reverse String" />
    <published>2023-02-11T00:00:00+09:00</published>
  
    <updated>2023-02-12T17:48:09+09:00</updated>
  
    <id>http://localhost:4000/posts/reverse-string/</id>
    <content src="http://localhost:4000/posts/reverse-string/" />
    <author>
      <name>chaneesong</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  
    <summary>
      





      344. Reverse String

문제 설명

문자열을 뒤집는 함수를 작성하라.
추가적인 메모리 사용없이 리스트를 직접 조작하여야 한다.

해결 방법

리스트의 절반을 순회하여 앞과 뒤를 바꾼다.



풀이 코드

function reverseString(s: string[]): void {
  for (let i = 0; i &amp;lt; Math.floor(s.length / 2); i++) {
    const tmp = s[i];
    s[i] = s[s.length - 1 - i];
    s[s.length - 1 - i] = tmp;
  }
}


테스트 코드

import { describe, expect, test } from "@jest/globals";
import { reverse...
    </summary>
  

  </entry>

</feed>


